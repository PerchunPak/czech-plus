name: Test

on:
  push:
    branches:
    - master
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - uses: actions/checkout@v3

    - name: Cache Poetry
      uses: actions/cache@v3
      with:
        path: |
          ~/.config/pypoetry
          ~/.local/share/pypoetry
          ~/.cache/pypoetry
        key: poetry-${{ runner.os }}

    - name: Install/Update Poetry
      run: |
        curl -sSL "https://install.python-poetry.org" | python

        echo "$HOME/.local/share/pypoetry/venv/bin" >> $GITHUB_PATH
        poetry config virtualenvs.in-project true

    - name: Cache Packages and Dependencies cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/.venv
          ${{ github.workspace }}/czech_plus/_vendor
          ${{ github.workspace }}/.mypy_cache
          ${{ github.workspace }}/.pytest_cache
        key: dependencies-${{ github.job }}-${{ runner.os }}-${{ matrix.python-version }}

    - name: Install and Cache APT packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libegl1-mesa
        version: 1.0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        poetry env use "${{ matrix.python-version }}"
        poetry install --without docs --with github_hooks --sync
        poetry run vendoring sync

    - name: Run checks
      run: poetry run make test ci=1

  post-test:
    runs-on: ubuntu-latest
    needs: 'test'

    steps:
    - uses: actions/checkout@v3

    - name: Cache Poetry
      uses: actions/cache@v3
      with:
        path: |
          ~/.config/pypoetry
          ~/.local/share/pypoetry
          ~/.cache/pypoetry
        key: poetry-${{ runner.os }}

    - name: Install/Update Poetry
      run: |
        curl -sSL "https://install.python-poetry.org" | python

        echo "$HOME/.local/share/pypoetry/venv/bin" >> $GITHUB_PATH
        poetry config virtualenvs.in-project true

    - name: Cache Packages and Dependencies cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/.venv
          ${{ github.workspace }}/czech_plus/_vendor
          ${{ github.workspace }}/.mypy_cache
          ${{ github.workspace }}/.pytest_cache
        key: dependencies-${{ github.job }}-${{ runner.os }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        poetry env use "3.9"
        poetry install --only main,make,github_hooks --sync

    - name: Apply codestyle
      run: |
        poetry run make format

        poetry run python .github/commit_and_push.py \
          --token ${{ secrets.GITHUB_TOKEN }} \
          PerchunPak/czech-plus \
          ${{ github.head_ref || github.ref_name }} \
          "Apply codestyle :pencil2:"

    - name: Update poetry.lock
      run: |
        poetry update --lock

    - name: Commit changes
      run: |
        poetry run python .github/commit_and_push.py \
          --token ${{ secrets.GITHUB_TOKEN }} \
          PerchunPak/czech-plus \
          ${{ github.head_ref || github.ref_name }} \
          "Update poetry.lock :chart_with_upwards_trend:"
